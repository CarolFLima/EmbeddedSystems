ARM GAS  /tmp/ccWhbief.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ourHal.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.setPin,"ax",%progbits
  19              		.align	2
  20              		.global	setPin
  21              		.thumb
  22              		.thumb_func
  24              	setPin:
  25              	.LFB0:
  26              		.file 1 "Src/ourHal.c"
   1:Src/ourHal.c  **** #include "ourHal.h"
   2:Src/ourHal.c  **** 
   3:Src/ourHal.c  **** 
   4:Src/ourHal.c  **** /*
   5:Src/ourHal.c  ****  Sets the specified pin to one
   6:Src/ourHal.c  **** */
   7:Src/ourHal.c  **** void setPin(GPIO_TypeDef * GPIO, int PIN)
   8:Src/ourHal.c  **** {
  27              		.loc 1 8 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43 0008 3960     		str	r1, [r7]
   9:Src/ourHal.c  **** 	GPIO->ODR |= (0x01 << PIN);
  44              		.loc 1 9 0
  45 000a 7B68     		ldr	r3, [r7, #4]
  46 000c DB68     		ldr	r3, [r3, #12]
  47 000e 0121     		movs	r1, #1
  48 0010 3A68     		ldr	r2, [r7]
  49 0012 01FA02F2 		lsl	r2, r1, r2
ARM GAS  /tmp/ccWhbief.s 			page 2


  50 0016 1A43     		orrs	r2, r2, r3
  51 0018 7B68     		ldr	r3, [r7, #4]
  52 001a DA60     		str	r2, [r3, #12]
  10:Src/ourHal.c  **** }
  53              		.loc 1 10 0
  54 001c 0C37     		adds	r7, r7, #12
  55              	.LCFI3:
  56              		.cfi_def_cfa_offset 4
  57 001e BD46     		mov	sp, r7
  58              	.LCFI4:
  59              		.cfi_def_cfa_register 13
  60              		@ sp needed
  61 0020 5DF8047B 		ldr	r7, [sp], #4
  62              	.LCFI5:
  63              		.cfi_restore 7
  64              		.cfi_def_cfa_offset 0
  65 0024 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE0:
  69 0026 00BF     		.section	.text.clearPin,"ax",%progbits
  70              		.align	2
  71              		.global	clearPin
  72              		.thumb
  73              		.thumb_func
  75              	clearPin:
  76              	.LFB1:
  11:Src/ourHal.c  **** 
  12:Src/ourHal.c  **** /*
  13:Src/ourHal.c  ****  Sets the specified pin to zero
  14:Src/ourHal.c  **** */
  15:Src/ourHal.c  **** void clearPin(GPIO_TypeDef * GPIO, int PIN)
  16:Src/ourHal.c  **** {
  77              		.loc 1 16 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82 0000 80B4     		push	{r7}
  83              	.LCFI6:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 7, -4
  86 0002 83B0     		sub	sp, sp, #12
  87              	.LCFI7:
  88              		.cfi_def_cfa_offset 16
  89 0004 00AF     		add	r7, sp, #0
  90              	.LCFI8:
  91              		.cfi_def_cfa_register 7
  92 0006 7860     		str	r0, [r7, #4]
  93 0008 3960     		str	r1, [r7]
  17:Src/ourHal.c  **** 	GPIO->ODR &= !(0x01 << PIN);
  94              		.loc 1 17 0
  95 000a 7B68     		ldr	r3, [r7, #4]
  96 000c DB68     		ldr	r3, [r3, #12]
  97 000e 0121     		movs	r1, #1
  98 0010 3A68     		ldr	r2, [r7]
  99 0012 01FA02F2 		lsl	r2, r1, r2
 100 0016 002A     		cmp	r2, #0
ARM GAS  /tmp/ccWhbief.s 			page 3


 101 0018 0CBF     		ite	eq
 102 001a 0122     		moveq	r2, #1
 103 001c 0022     		movne	r2, #0
 104 001e D2B2     		uxtb	r2, r2
 105 0020 1A40     		ands	r2, r2, r3
 106 0022 7B68     		ldr	r3, [r7, #4]
 107 0024 DA60     		str	r2, [r3, #12]
  18:Src/ourHal.c  **** }
 108              		.loc 1 18 0
 109 0026 0C37     		adds	r7, r7, #12
 110              	.LCFI9:
 111              		.cfi_def_cfa_offset 4
 112 0028 BD46     		mov	sp, r7
 113              	.LCFI10:
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
 116 002a 5DF8047B 		ldr	r7, [sp], #4
 117              	.LCFI11:
 118              		.cfi_restore 7
 119              		.cfi_def_cfa_offset 0
 120 002e 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE1:
 124              		.section	.text.togglePin,"ax",%progbits
 125              		.align	2
 126              		.global	togglePin
 127              		.thumb
 128              		.thumb_func
 130              	togglePin:
 131              	.LFB2:
  19:Src/ourHal.c  **** 
  20:Src/ourHal.c  **** /*
  21:Src/ourHal.c  ****  Switches the value of the specified pin
  22:Src/ourHal.c  **** */
  23:Src/ourHal.c  **** void togglePin(GPIO_TypeDef * GPIO, int PIN)
  24:Src/ourHal.c  **** {
 132              		.loc 1 24 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 8
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136 0000 80B5     		push	{r7, lr}
 137              	.LCFI12:
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 82B0     		sub	sp, sp, #8
 142              	.LCFI13:
 143              		.cfi_def_cfa_offset 16
 144 0004 00AF     		add	r7, sp, #0
 145              	.LCFI14:
 146              		.cfi_def_cfa_register 7
 147 0006 7860     		str	r0, [r7, #4]
 148 0008 3960     		str	r1, [r7]
  25:Src/ourHal.c  **** 	if((GPIO->ODR & (0x0001 << PIN)) == 0x0000){
 149              		.loc 1 25 0
 150 000a 7B68     		ldr	r3, [r7, #4]
 151 000c DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccWhbief.s 			page 4


 152 000e 0121     		movs	r1, #1
 153 0010 3A68     		ldr	r2, [r7]
 154 0012 01FA02F2 		lsl	r2, r1, r2
 155 0016 1340     		ands	r3, r3, r2
 156 0018 002B     		cmp	r3, #0
 157 001a 04D1     		bne	.L4
  26:Src/ourHal.c  **** 		setPin(GPIO, PIN);
 158              		.loc 1 26 0
 159 001c 7868     		ldr	r0, [r7, #4]
 160 001e 3968     		ldr	r1, [r7]
 161 0020 FFF7FEFF 		bl	setPin
 162 0024 03E0     		b	.L3
 163              	.L4:
  27:Src/ourHal.c  **** 	} else {
  28:Src/ourHal.c  **** 		clearPin(GPIO, PIN);
 164              		.loc 1 28 0
 165 0026 7868     		ldr	r0, [r7, #4]
 166 0028 3968     		ldr	r1, [r7]
 167 002a FFF7FEFF 		bl	clearPin
 168              	.L3:
  29:Src/ourHal.c  **** 	}
  30:Src/ourHal.c  **** 	// You can also toggle a pin using a XOR:
  31:Src/ourHal.c  **** 	//GPIO->ODR ^= (0x01 << PIN); 
  32:Src/ourHal.c  **** }
 169              		.loc 1 32 0
 170 002e 0837     		adds	r7, r7, #8
 171              	.LCFI15:
 172              		.cfi_def_cfa_offset 8
 173 0030 BD46     		mov	sp, r7
 174              	.LCFI16:
 175              		.cfi_def_cfa_register 13
 176              		@ sp needed
 177 0032 80BD     		pop	{r7, pc}
 178              		.cfi_endproc
 179              	.LFE2:
 181              		.section	.text.write,"ax",%progbits
 182              		.align	2
 183              		.global	write
 184              		.thumb
 185              		.thumb_func
 187              	write:
 188              	.LFB3:
  33:Src/ourHal.c  **** 
  34:Src/ourHal.c  **** /*
  35:Src/ourHal.c  ****  Writes a value on the specified port
  36:Src/ourHal.c  **** */
  37:Src/ourHal.c  **** void write(GPIO_TypeDef * GPIO, uint32_t value)
  38:Src/ourHal.c  **** {
 189              		.loc 1 38 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 8
 192              		@ frame_needed = 1, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194 0000 80B4     		push	{r7}
 195              	.LCFI17:
 196              		.cfi_def_cfa_offset 4
 197              		.cfi_offset 7, -4
ARM GAS  /tmp/ccWhbief.s 			page 5


 198 0002 83B0     		sub	sp, sp, #12
 199              	.LCFI18:
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              	.LCFI19:
 203              		.cfi_def_cfa_register 7
 204 0006 7860     		str	r0, [r7, #4]
 205 0008 3960     		str	r1, [r7]
  39:Src/ourHal.c  **** 	GPIO->ODR = value;
 206              		.loc 1 39 0
 207 000a 7B68     		ldr	r3, [r7, #4]
 208 000c 3A68     		ldr	r2, [r7]
 209 000e DA60     		str	r2, [r3, #12]
  40:Src/ourHal.c  **** }
 210              		.loc 1 40 0
 211 0010 0C37     		adds	r7, r7, #12
 212              	.LCFI20:
 213              		.cfi_def_cfa_offset 4
 214 0012 BD46     		mov	sp, r7
 215              	.LCFI21:
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 0014 5DF8047B 		ldr	r7, [sp], #4
 219              	.LCFI22:
 220              		.cfi_restore 7
 221              		.cfi_def_cfa_offset 0
 222 0018 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE3:
 226 001a 00BF     		.text
 227              	.Letext0:
 228              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 229              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 230              		.file 4 "Inc/ioMapping.h"
ARM GAS  /tmp/ccWhbief.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ourHal.c
     /tmp/ccWhbief.s:19     .text.setPin:0000000000000000 $t
     /tmp/ccWhbief.s:24     .text.setPin:0000000000000000 setPin
     /tmp/ccWhbief.s:70     .text.clearPin:0000000000000000 $t
     /tmp/ccWhbief.s:75     .text.clearPin:0000000000000000 clearPin
     /tmp/ccWhbief.s:125    .text.togglePin:0000000000000000 $t
     /tmp/ccWhbief.s:130    .text.togglePin:0000000000000000 togglePin
     /tmp/ccWhbief.s:182    .text.write:0000000000000000 $t
     /tmp/ccWhbief.s:187    .text.write:0000000000000000 write
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
